{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Deaan\\\\Desktop\\\\Coding\\\\ReactApps\\\\Section11\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n/****************************************************************/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD_CART_ITEM') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const testTotalAmount = String(updatedTotalAmount);\n    return {\n      items: updatedItems,\n      totalAmount: testTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD_CART_ITEM',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE_CART_ITEM',\n      id: id\n    });\n  };\n\n  const crtContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  console.log(crtContext);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: crtContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Deaan/Desktop/Coding/ReactApps/Section11/01-starting-project/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","testTotalAmount","String","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","crtContext","addItem","removeItem","console","log","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA;;;AACA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACnC,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA/E;AACA,UAAMC,eAAe,GAAGC,MAAM,CAACJ,kBAAD,CAA9B;AAEA,WAAO;AACLT,MAAAA,KAAK,EAAEM,YADF;AAELL,MAAAA,WAAW,EAAEW;AAFR,KAAP;AAID;;AAED,SAAOb,gBAAP;AACD,CAbD;;AAeA,MAAMe,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCpB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMmB,oBAAoB,GAAIV,IAAD,IAAU;AACrCS,IAAAA,kBAAkB,CAAC;AAACZ,MAAAA,IAAI,EAAE,eAAP;AAAwBG,MAAAA,IAAI,EAAEA;AAA9B,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMW,yBAAyB,GAAIC,EAAD,IAAQ;AACxCH,IAAAA,kBAAkB,CAAC;AAACZ,MAAAA,IAAI,EAAE,kBAAP;AAA2Be,MAAAA,EAAE,EAAEA;AAA/B,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG;AACjBrB,IAAAA,KAAK,EAAEgB,SAAS,CAAChB,KADA;AAEjBC,IAAAA,WAAW,EAAEe,SAAS,CAACf,WAFN;AAGjBqB,IAAAA,OAAO,EAAEJ,oBAHQ;AAIjBK,IAAAA,UAAU,EAAEJ;AAJK,GAAnB;AAOAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AAEA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEA,UAA7B;AAAA,cACJN,KAAK,CAACW;AADF;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CAvBD;;GAAMZ,Y;;KAAAA,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\nimport CartContext from \"./cart-context\";\r\n/****************************************************************/\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === 'ADD_CART_ITEM') {\r\n    const updatedItems = state.items.concat(action.item);\r\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n    const testTotalAmount = String(updatedTotalAmount);\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: testTotalAmount\r\n    };\r\n  }\r\n\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = props => {\r\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({type: 'ADD_CART_ITEM', item: item});\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({type: 'REMOVE_CART_ITEM', id: id});\r\n  };\r\n  \r\n  const crtContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler\r\n  };\r\n\r\n  console.log(crtContext);\r\n\r\n  return <CartContext.Provider value={crtContext}>\r\n    {props.children}\r\n  </CartContext.Provider>\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}